# -*- coding: utf-8 -*-
"""SR Week 7

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mnkcSqxsFlmEKkDOIcwVzDiMY0H1_uX1

Run the following code to set up the Savile Row environment and define a function for running Savile Row.
"""

import os

srurl="https://www-users.york.ac.uk/peter.nightingale/savilerow/savilerow-1.10.1-linux.tgz"
srdir="savilerow-1.10.1-linux"
![ ! -d $srdir ] && wget $srurl && tar -zxf savilerow-1.10.1-linux.tgz
stub=f"./{srdir}/savilerow -minion-bin {srdir}/bin/minion -satsolver-bin {srdir}/bin/kissat"

def solve(model, param):
  with open("tmp.eprime", "wt") as f:
    f.write(model)
  with open("tmp.param", "wt") as f:
    f.write(param)
  !$stub tmp.eprime tmp.param -run-solver

  try:
    with open("tmp.param.solution", "rt") as f:
      sol=f.read()
    os.remove("tmp.param.solution")
  except FileNotFoundError:
    sol="No solution found."
  print(sol)

"""Here is a tiny example of using the solve function, with a model and parameter file written in Essence Prime."""

model = """
language ESSENCE' 1.0

given n : int

find m : matrix indexed by [int(1..n)] of int(1..n)

such that

m[5] < m[1],
allDiff(m)

"""
param = """
letting n be 5
"""

solve(model, param)

from google.colab import files
uploaded = files.upload()

import subprocess

eprime_file = "/content/CrystalMaze.eprime"       # ← change to your actual filename
#param_file = "instance.param"      # ← change to your actual filename

subprocess.run([
    f"./{srdir}/savilerow",
    "-minion-bin", f"{srdir}/bin/minion",
    "-satsolver-bin", f"{srdir}/bin/kissat",
    eprime_file,
    #param_file,
    "-run-solver"
], check=True)

solution_file = f"{eprime_file}.solution"

try:
    with open(solution_file, "r") as f:
        solution = f.read()
    print("✅ Solution:\n", solution)
except FileNotFoundError:
    print("❌ No solution found.")